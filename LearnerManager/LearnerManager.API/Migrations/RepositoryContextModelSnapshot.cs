// <auto-generated />
using System;
using LearnerManager.API.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LearnerManager.API.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LearnerManager.API.Domain.Entities.Asset", b =>
                {
                    b.Property<Guid>("AssetId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Id");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyUserId");

                    b.Property<int>("StatusId");

                    b.HasKey("AssetId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("LearnerManager.API.Domain.Entities.AssetCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AssetId");

                    b.Property<Guid>("CategoryId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyUserId");

                    b.Property<int>("StatusId");

                    b.HasKey("Id");

                    b.ToTable("AssetCategories");
                });

            modelBuilder.Entity("LearnerManager.API.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("Description");

                    b.Property<string>("Id");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyUserId");

                    b.Property<int>("StatusId");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LearnerManager.API.Domain.Entities.Learner", b =>
                {
                    b.Property<Guid>("LearnerId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("DateOfBirth");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("Grade");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Id");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyUserId");

                    b.Property<string>("Race");

                    b.Property<string>("SchoolName");

                    b.Property<string>("Section");

                    b.Property<int>("StatusId");

                    b.HasKey("LearnerId");

                    b.ToTable("learner");
                });

            modelBuilder.Entity("LearnerManager.API.Domain.Entities.Message", b =>
                {
                    b.Property<Guid>("MessageId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("Id");

                    b.Property<string>("MessageBody");

                    b.Property<string>("MessageType");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyUserId");

                    b.Property<int>("StatusId");

                    b.HasKey("MessageId");

                    b.ToTable("message");
                });

            modelBuilder.Entity("LearnerManager.API.Domain.Entities.Parent", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("Gender");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyUserId");

                    b.Property<string>("Nationality");

                    b.Property<Guid>("ParentId");

                    b.Property<int>("StatusId");

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("LearnerManager.API.Domain.Entities.ParentLearner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<Guid>("LearnerId");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyUserId");

                    b.Property<Guid>("ParentId");

                    b.Property<int>("StatusId");

                    b.HasKey("Id");

                    b.ToTable("ParentLearners");
                });

            modelBuilder.Entity("LearnerManager.API.Domain.Entities.SMS", b =>
                {
                    b.Property<Guid>("SMSId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("Id");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyUserId");

                    b.Property<string>("SentTo");

                    b.Property<int>("StatusId");

                    b.Property<string>("Subject");

                    b.HasKey("SMSId");

                    b.ToTable("sms");
                });

            modelBuilder.Entity("LearnerManager.API.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<string>("Email");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid>("ModifyUserId");

                    b.Property<string>("Password");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Region");

                    b.Property<string>("School");

                    b.Property<int>("StatusId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "b58e115b-f82d-45ab-aa00-f8bb8d073651",
                            CreateDate = new DateTime(2019, 8, 21, 22, 41, 21, 615, DateTimeKind.Local).AddTicks(1619),
                            CreateUserId = new Guid("ca4b48e8-3c65-4209-a283-810838e819f1"),
                            Email = "admin@studentio.net",
                            LockoutEnabled = false,
                            ModifyDate = new DateTime(2019, 8, 21, 22, 41, 21, 616, DateTimeKind.Local).AddTicks(5783),
                            ModifyUserId = new Guid("ca4b48e8-3c65-4209-a283-810838e819f1"),
                            Password = "Ndusystems@2019!",
                            PhoneNumber = "+27746958064",
                            Region = "Fourways",
                            School = "Ndu Systems School of Tech",
                            StatusId = 1,
                            UserName = "admin@studentio.net"
                        },
                        new
                        {
                            Id = "22d9f8c5-407d-499e-80e3-73358efed423",
                            CreateDate = new DateTime(2019, 8, 21, 22, 41, 21, 616, DateTimeKind.Local).AddTicks(7643),
                            CreateUserId = new Guid("ca4b48e8-3c65-4209-a283-810838e819f1"),
                            Email = "teacher@studentio.net",
                            LockoutEnabled = false,
                            ModifyDate = new DateTime(2019, 8, 21, 22, 41, 21, 616, DateTimeKind.Local).AddTicks(7654),
                            ModifyUserId = new Guid("ca4b48e8-3c65-4209-a283-810838e819f1"),
                            Password = "Ndusystems@2019!",
                            PhoneNumber = "+27746958064",
                            Region = "Fourways",
                            School = "Ndu Systems School of Tech",
                            StatusId = 1,
                            UserName = "teacher@studentio.net"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
